<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>Week</h1>
<p>week1</p>
<p>中秋放假~</p>
<p>week2</p>
<p><strong>建立個人倉儲和網站</strong></p>
<p>先登入github，將自己的cad2019倉儲建立起來，把201906_fall可攜系統載到隨身碟上，將自己的倉儲git clone到隨身碟上，以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde建立 cmsimde 目錄，把up_dir裡的東西複製到cad2019資料夾，切換到cmsimde的目錄下，<span>以 python wsgi.py 啟動近端網際伺服器，動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</span></p>
<p>然後到github上，setting的github pages上，切換到master branch，建立起自己的網站。</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Sv2vLEIjh_s" width="560"></iframe></p>
<p>week3</p>
<p><strong>solvespace編譯</strong></p>
<p>1.將Y:\portablegit\bin\sh.exe 改名為 sh_rename_for_solvespace.exe <br/>2.git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace<br/>3.edit Y:\tmp\solvespace\extlib\angle\CMakeLists.txt comment out line 713 and 714<br/>#list(APPEND ANGLE_DEFINITIONS<br/>#"-DANGLE_PRELOADED_D3DCOMPILER_MODULE_NAMES={ \"d3dcompiler_47.dll\", \"d3dcompiler_46.dll\", \"d3dcompiler_43.dll\" }")<br/>endif()<br/>4.接著需要手動進行 libpng.dll.a 的編譯, 並改名為 libpng_static.a, 並放到編譯系統的 lib 目錄中 (即隨身系統的 msys64\mingw64\lib 目錄):<br/>5.cd solvespace<br/>6.cd extlib<br/>7.cd libpng<br/>8.mkdir build<br/>9.cd build<br/>10.cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<br/>11.mingw32-make<br/>12.接著回到 solvespace 原始碼目錄, 建立 build 目錄後進入 build 目錄, 執行:<br/>13.cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<br/>14.mingw32-make</p>
<p>week4</p>
<p>1.將以前的進度補好</p>
<p>2.補上影片</p>
<p><strong></strong></p>
<p></p>